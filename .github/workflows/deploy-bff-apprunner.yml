name: Build and Push to ECR

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "deana-ai-server/Dockerfile"
      - "deana-ai-server/package.json"
      - "deana-ai-server/package-lock.json"
      - "deana-ai-server/**"

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # e.g., deana-bff

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug OIDC claims (sub/aud/ref)
        run: |
          set -euo pipefail
          TOKEN_JSON=$(curl -sSL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com")
          TOKEN=$(echo "$TOKEN_JSON" | jq -r '.value')
          ID_TOKEN="$TOKEN" python3 - <<'PY'
          import os, json, base64
          token = os.environ.get('ID_TOKEN', '')
          if not token or token.count('.') != 2:
              print('aud=')
              print('sub=')
              print('repository=')
              print('ref=')
          else:
              payload_b64 = token.split('.')[1]
              payload_b64 += '=' * (-len(payload_b64) % 4)
              payload = json.loads(base64.urlsafe_b64decode(payload_b64))
              print(f"aud={payload.get('aud')}")
              print(f"sub={payload.get('sub')}")
              print(f"repository={payload.get('repository')}")
              print(f"ref={payload.get('ref')}")
          PY

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null

      - name: Build, tag, and push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: deana-ai-server
        run: |
          docker build -t $ECR_REPOSITORY:latest .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
